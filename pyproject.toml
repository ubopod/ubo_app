[tool.poetry]
name = "ubo-app"
version = "0.13.0"
description = "Ubo main app, running on device initialization. A platform for running other apps."
authors = ["Sassan Haradji <sassanh@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
packages = [{ include = "ubo_app" }]
include = ["ubo_app/services/*-sound/sounds/*"]


[[tool.poetry.source]]
name = "PyPI"
priority = "primary"


[tool.poetry.dependencies]
python = "^3.11"
psutil = "^5.9.8"
ubo-gui = [
  { version = "^0.10.7", markers = "extra=='default'", extras = [
    "default",
  ] },
  { version = "^0.10.7", markers = "extra=='dev'", extras = [
    "dev",
  ] },
]
python-redux = "^0.14.3"
pyzbar = "^0.1.9"
sdbus-networkmanager = { version = "^2.0.0", markers = "platform_machine=='aarch64'" }
rpi_ws281x = { version = "^5.0.0", markers = "platform_machine=='aarch64'" }
python-debouncer = "^0.1.4"
adafruit-circuitpython-neopixel = "^6.3.11"
pulsectl = "^23.5.2"
aiohttp = "^3.9.1"
semver = "^3.0.2"
adafruit-circuitpython-pct2075 = "^1.1.21"
adafruit-circuitpython-veml7700 = "^1.1.22"
docker = "^7.0.0"
python-dotenv = "^1.0.1"
sentry-sdk = "^1.43.0"
pvorca = "^0.1.4"
platformdirs = "^4.2.0"
dill = "^0.3.8"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.24.4"
pyright = "^1.1.360"
pytest = "^8.0.0"
pytest-asyncio = "^0.23.5.post1"
pytest-cov = "^4.1.0"
pytest-timeout = "^2.3.1"
pytest-xdist = "^3.5.0"
ruff = "^0.4.1"
tenacity = "^8.2.3"
toml = "^0.10.2"
pytest-mock = "^3.14.0"
pyaudio = { version = "^0.2.14", markers = "platform_machine!='aarch64'" }
ipython = "^8.23.0"

[tool.poetry.extras]
default = ["ubo-gui"]
dev = ["ubo-gui"]

[tool.poetry.scripts]
ubo = "ubo_app.main:main"
bootstrap = "ubo_app.bootstrap:main"
ubo-system = "ubo_app.system.system_manager.main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
lint = "ruff check . --unsafe-fixes"
typecheck = "pyright -p pyproject.toml ."
test = "pytest --cov=ubo_app"
sanity = ["typecheck", "lint", "test"]

[tool.poe.tasks.deploy_to_device]
args = [
  { name = "deps", type = "boolean" },
  { name = "run", type = "boolean" },
  { name = "bootstrap", type = "boolean" },
  { name = "env", type = "boolean" },
]
cmd = "scripts/deploy.sh"

[tool.ruff]
target-version = 'py311'

[tool.ruff.lint]
select = ["ALL"]
ignore = ["INP001", "PLR0911", "D203", "D213"]
fixable = ["ALL"]
unfixable = []
logger-objects = ['ubo_app.logging.logger']

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["type", "id"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "PLR0913", "PLR0915"]
"**/reducer.py" = ["C901", "PLR0912", "PLR0915"]
"ubo_app/services/*/ubo_handle.py" = ["TCH004"]

[tool.ruff.format]
quote-style = "single"

[tool.isort]
profile = "black"

[tool.pyright]
exclude = ["typings"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
filterwarnings = "ignore:'imghdr' is deprecated:DeprecationWarning"
timeout = 50

[tool.coverage.report]
exclude_also = ["if TYPE_CHECKING:"]
