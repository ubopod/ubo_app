[tool.poetry]
name = "ubo-app"
version = "0.15.7"
description = "Ubo main app, running on device initialization. A platform for running other apps."
authors = ["Sassan Haradji <sassanh@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
packages = [{ include = "ubo_app" }]


[[tool.poetry.source]]
name = "PyPI"
priority = "primary"


[tool.poetry.dependencies]
python = "^3.11"
psutil = "^6.0.0"
ubo-gui = "^0.13.1"
headless-kivy = [
  { version = "^0.9.7", markers = "extra=='default'", extras = [
    "default",
  ] },
  { version = "^0.9.7", markers = "extra=='dev'", extras = [
    "test",
  ] },
]
pyzbar = "^0.1.9"
sdbus-networkmanager = { version = "^2.0.0", markers = "platform_machine=='aarch64'" }
rpi_ws281x = { version = "^5.0.0", markers = "platform_machine=='aarch64'" }
pulsectl = "^23.5.2"
aiohttp = "^3.9.1"
semver = "^3.0.2"
docker = "^7.0.0"
python-dotenv = "^1.0.1"
sentry-sdk = "^1.43.0"
pvorca = "^0.2.1"
platformdirs = "^4.2.0"
dill = "^0.3.8"
simpleaudio = "^1.0.4"

python-redux = "^0.16.0"
python-debouncer = "^0.1.5"
python-strtobool = "^1.0.0"
python-fake = "^0.1.0"

# Adafruit dependencies
adafruit-circuitpython-rgb-display = "^3.11.0"
adafruit-circuitpython-aw9523 = "^1.1.7"
adafruit-circuitpython-neopixel = "^6.3.11"
adafruit-circuitpython-pct2075 = "^1.1.21"
adafruit-circuitpython-veml7700 = "^1.1.22"

# RPi dependencies
rpi-lgpio = { version = "^0.6", markers = "platform_machine=='aarch64'" }
piper-tts = { version = "^1.2.0", markers = "sys_platform=='linux'" }
fasteners = "^0.19"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.24.4"
pyright = "^1.1.376"
pytest = "^8.0.0"
pytest-asyncio = "^0.23.5.post1"
pytest-cov = "^4.1.0"
pytest-timeout = "^2.3.1"
pytest-xdist = "^3.5.0"
ruff = "^0.6.0"
tenacity = "^8.2.3"
toml = "^0.10.2"
pytest-mock = "^3.14.0"
ipython = "^8.23.0"
pyfakefs = { git = "https://github.com/pytest-dev/pyfakefs.git" }

[tool.poetry.extras]
default = ["headless-kivy"]
dev = ["headless-kivy"]

[tool.poetry.scripts]
ubo = "ubo_app.main:main"
bootstrap = "ubo_app.bootstrap:main"
ubo-system = "ubo_app.system.system_manager.main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
lint = "ruff check . --unsafe-fixes"
typecheck = "pyright -p pyproject.toml ."
test = "pytest --cov=ubo_app"
sanity = ["typecheck", "lint", "test"]
build-docker-images = "sh -c 'docker buildx build . -f scripts/Dockerfile.dev -t ubo-app-dev && docker buildx build . -f scripts/Dockerfile.test -t ubo-app-test'"

[tool.poe.tasks.test-on-device]
args = [
  { name = "copy", type = "boolean" },
  { name = "deps", type = "boolean" },
  { name = "run", type = "boolean" },
]
cmd = "scripts/test_on_device.sh"

[tool.poe.tasks.deploy-to-device]
args = [
  { name = "deps", type = "boolean" },
  { name = "run", type = "boolean" },
  { name = "restart", type = "boolean" },
  { name = "bootstrap", type = "boolean" },
  { name = "env", type = "boolean" },
]
cmd = "scripts/deploy.sh"

[tool.ruff]
target-version = 'py311'

[tool.ruff.lint]
select = ["ALL"]
ignore = ["INP001", "PLR0911", "D203", "D213", "PLC0415", "TD003"]
fixable = ["ALL"]
unfixable = []
logger-objects = ['ubo_app.logging.logger']

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["type", "id"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "PLR0913", "PLR0915"]
"**/reducer.py" = ["C901", "PLR0912", "PLR0915"]
"ubo_app/services/*/ubo_handle.py" = ["TCH004"]

[tool.ruff.format]
quote-style = "single"

[tool.isort]
profile = "black"

[tool.pyright]
exclude = ["typings"]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/000-keypad"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/000-audio"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/010-notifications"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/010-voice"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/020-keyboard"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/030-ethernet"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/030-ip"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/030-wifi"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/040-camera"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/040-rgb-ring"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/040-sensors"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/050-lightdm"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/050-rpi-connect"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/050-ssh"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/050-vscode"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/080-docker"
extraPaths = ["."]

[tool.pytest.ini_options]
asyncio_mode = "auto"
filterwarnings = [
  "ignore: setDaemon\\(\\) is deprecated, set the daemon attribute instead:DeprecationWarning",
  "ignore:'imghdr' is deprecated:DeprecationWarning",
]
timeout = 40

[tool.coverage.report]
exclude_also = ["if TYPE_CHECKING:"]
