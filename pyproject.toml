[project]
name = "ubo-app"
dynamic = ["version"]
description = "Ubo main app, running on device initialization. A platform for running other apps."
license = { text = "Apache-2.0" }
readme = "README.md"
requires-python = ">=3.11"
keywords = ['ubo', 'ubo-pod', 'raspberry pi', 'rpi', 'home assistance']
dependencies = [
  "psutil >=6.0.0",
  "ubo-gui >=0.13.8",
  "headless-kivy >=0.12.2",
  "pyzbar >=0.1.9",
  "sdbus-networkmanager >=2.0.0 ; platform_machine=='aarch64'",
  "rpi_ws281x >=5.0.0 ; platform_machine=='aarch64'",
  "pulsectl >=23.5.2",
  "aiohttp >=3.9.1",
  "semver >=3.0.2",
  "docker>=7.1.0",
  "python-dotenv >=1.0.1",
  "sentry-sdk >=1.43.0",
  "pvorca >=0.2.1",
  "platformdirs >=4.2.0",
  "dill >=0.3.8",
  "simpleaudio >=1.0.4",
  "python-redux >=0.18.3",
  "python-debouncer >=0.1.5",
  "python-strtobool >=1.0.0",
  "python-fake >=0.1.3",
  # Adafruit dependencies
  "adafruit-circuitpython-rgb-display >=3.11.0",
  "adafruit-circuitpython-aw9523 >=1.1.7",
  "adafruit-circuitpython-neopixel >=6.3.11",
  "adafruit-circuitpython-pct2075 >=1.1.21",
  "adafruit-circuitpython-veml7700 >=1.1.22",
  # RPi dependencies
  "rpi-lgpio >=0.6 ; platform_machine=='aarch64'",
  "piper-tts >=1.2.0 ; sys_platform=='linux'",
  "fasteners >=0.19",
  # gRPC
  "betterproto [compiler] >=2.0.0b7",
  "gpiozero >=2.0.1 ; platform_machine != 'aarch64'",
  "quart >=0.19.6",
  "pythonping>=1.1.4",
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "ubo_app/_version.py"

[tool.hatch.version.raw-options]
local_scheme = "setup_scm_schemes:local_scheme"

[tool.hatch.build]
packages = ["ubo_app"]

[tool.hatch.build.targets.sdist]
packages = ["ubo_app"]

[tool.uv]
dev-dependencies = [
  "headless-kivy [test] >=0.12.1",
  "poethepoet >=0.24.4",
  "pyright >=1.1.389",
  "pytest >=8.0.0",
  "pytest-asyncio >=0.23.5.post1",
  "pytest-cov >=4.1.0",
  "pytest-timeout >=2.3.1",
  "pytest-xdist >=3.5.0",
  "ruff >=0.6.2",
  "tenacity >=8.2.3",
  "toml >=0.10.2",
  "pytest-mock >=3.14.0",
  "ipython >=8.23.0",
  "pyfakefs",
  "grpcio-tools >=1.66.1",
]


[tool.uv.sources]
pyfakefs = { git = "https://github.com/pytest-dev/pyfakefs.git" }

[project.scripts]
ubo = "ubo_app.main:main"
bootstrap = "ubo_app.bootstrap:main"
ubo-system = "ubo_app.system.system_manager.main:main"


[[project.authors]]
name = "Sassan Haradji"
email = "sassanh@gmail.com"

[tool.poe.tasks]
lint = "ruff check ."
"lint:fix" = "ruff check . --fix --unsafe-fixes"
typecheck = "pyright -p pyproject.toml ."
test = "pytest --cov=ubo_app"
sanity = ["typecheck", "lint", "test"]
build-docker-images = "sh -c 'docker buildx build . -f scripts/Dockerfile.dev -t ubo-app-dev && docker buildx build . -f scripts/Dockerfile.test -t ubo-app-test'"

"proto:generate:raw" = "python ubo_app/rpc/generate_proto.py"
"proto:generate" = ["proto:generate:raw", "proto:lint"]
"proto:compile:raw" = "sh -c 'mkdir -p ubo_app/rpc/generated && python -m grpc_tools.protoc -I ubo_app/rpc/proto/ --python_betterproto_opt=typing.310 --python_betterproto_out=ubo_app/rpc/generated/ ubo_app/rpc/proto/store/v1/store.proto'"
"proto:compile" = ["proto:compile:raw", "lint:fix"]
"proto:lint" = "buf format -w ubo_app/rpc/proto/"
"proto" = ["proto:generate", "proto:compile"]

"device:deploy" = "poe deploy-to-device"
"device:deploy:deps" = "poe deploy-to-device --deps"
"device:deploy:kill" = "poe deploy-to-device --kill"
"device:deploy:restart" = "poe deploy-to-device --restart"
"device:deploy:bootstrap" = "poe deploy-to-device --bootstrap --restart"
"device:deploy:complete" = "poe deploy-to-device --deps --bootstrap --restart"
"device:deploy:env" = "poe deploy-to-device --env"

"device:test" = "poe test-on-device --copy --run --results"
"device:test:deps" = "poe test-on-device --deps"
"device:test:copy" = "poe test-on-device --copy"
"device:test:run" = "poe test-on-device --run"
"device:test:results" = "poe test-on-device --results"
"device:test:complete" = "poe test-on-device --deps --copy --run --results"

[tool.poe.tasks.test-on-device]
args = [
  { name = "deps", type = "boolean" },
  { name = "copy", type = "boolean" },
  { name = "run", type = "boolean" },
  { name = "results", type = "boolean" },
]
cmd = "scripts/test_on_device.sh"

[tool.poe.tasks.deploy-to-device]
args = [
  { name = "deps", type = "boolean" },
  { name = "kill", type = "boolean" },
  { name = "restart", type = "boolean" },
  { name = "bootstrap", type = "boolean" },
  { name = "env", type = "boolean" },
]
cmd = "scripts/deploy.sh"

[tool.ruff]
target-version = 'py311'

[tool.ruff.lint]
select = ["ALL"]
ignore = ["INP001", "PLR0911", "D203", "D213", "PLC0415", "TD003"]
fixable = ["ALL"]
unfixable = []
logger-objects = ['ubo_app.logging.logger']

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["type", "id"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "PLR0913", "PLR0915"]
"**/reducer.py" = ["C901", "PLR0912", "PLR0915"]
"ubo_app/services/*/ubo_handle.py" = ["TC004"]
"ubo_app/rpc/generated/*" = [
  "ARG002",
  "ASYNC109",
  "D",
  "E402",
  "E501",
  "ERA001",
  "F401",
  "RUF009",
  "SLF001",
  "TC001",
  "TID252",
]

[tool.ruff.format]
quote-style = "single"

[tool.isort]
profile = "black"

[tool.pyright]
exclude = [
  "typings",
  "ubo_app/rpc/generated",
  ".venv",
  "setup_scm_schemes.py",
  "dist/",
]
disableTaggedHints = true

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/000-audio"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/000-display"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/000-keypad"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/010-notifications"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/010-voice"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/020-keyboard"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/030-ethernet"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/030-ip"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/030-wifi"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/040-camera"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/040-rgb-ring"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/040-sensors"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/050-lightdm"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/050-rpi-connect"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/050-ssh"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/050-users"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/050-vscode"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/080-docker"
extraPaths = ["."]

[[tool.pyright.executionEnvironments]]
root = "ubo_app/services/090-web-ui"
extraPaths = ["."]

[tool.pytest.ini_options]
asyncio_mode = "auto"
filterwarnings = [
  "ignore: setDaemon\\(\\) is deprecated, set the daemon attribute instead:DeprecationWarning",
  "ignore:'imghdr' is deprecated:DeprecationWarning",
]
timeout = 40

[tool.coverage.report]
exclude_also = ["if TYPE_CHECKING:"]
